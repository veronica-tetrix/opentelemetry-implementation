# accept traces and metrics from any app that sends OTLP data
receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

# batch traces and metrics for efficiency (immediate for debugging)
processors:
  batch:
    timeout: 1s
    send_batch_size: 1
    
  # add resource attributes for better identification
  resource:
    attributes:
      - key: deployment.environment
        value: "development"
        action: upsert

# send traces and metrics to multiple destinations
exporters:
  # send to Jaeger using OTLP gRPC
  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true
      
  # send traces directly to OpenSearch using Elasticsearch exporter
  elasticsearch/traces:
    endpoints: [http://opensearch:9200]
    index: "otel-traces"
    
  # send metrics to Prometheus only (elasticsearch exporter doesn't support metrics well)
  prometheus:
    endpoint: "0.0.0.0:8889"
    
  # debug output
  logging:
    verbosity: detailed

# configure pipelines for traces and metrics
service:
  pipelines:
    traces:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [otlp/jaeger, elasticsearch/traces, logging]
      
    metrics:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [prometheus, logging]